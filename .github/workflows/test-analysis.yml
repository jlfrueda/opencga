name: Build and test the project
on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
      SSH_TESTING_SERVER_HOST:
        required: true
      SSH_TESTING_SERVER_PORT:
        required: true
      SSH_TESTING_SERVER_USER:
        required: true
      SSH_TESTING_SERVER_PASSWORD:
        required: true
    inputs:
      report_dir:
        type: string
        required: true
      report_context:
        type: string
        required: true
env:
  xb_version: "1.5.0"

jobs:
  test:
    name: Test and push Sonar analysis
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Start MongoDB v5.0
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: 5.0
          mongodb-replica-set: rs-test
      #      - name: Build and Run Tests
      #        run: mvn test --batch-mode --fail-at-end
      #      - name: Publish Test Report
      #        if: success() || failure()
      #        uses: scacap/action-surefire-report@v1
      - name: Test and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #        run: mvn -T 2 clean install -DskipTests -P storage-hadoop,hdp3.1 -Dcheckstyle.skip -B verify surefire-report:report  org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=opencb_opencga
        run: mvn -B verify -DskipTests -P storage-hadoop,hdp3.1 -Dcheckstyle.skip surefire-report:report org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=opencb_opencga
#      - name: Upload result dir
#        uses: actions/upload-artifact@v3
#        with:
#          name: workdir
#          path: "**/target/site"
#
#  publish-test:
#    name: Publish test results
#    runs-on: ubuntu-22.04
#    needs: test
#    strategy:
#      matrix:
#        module: [ "opencga-analisis","opencga-app","opencga-catalog","opencga-client","opencga-clinical","opencga-core","opencga-master","opencga-server","opencga-storage","opencga-test","opencga-storage/opencga-storage-app","opencga-storage/opencga-storage-benchmark","opencga-storage/opencga-storage-core","opencga-storage/opencga-storage-hadoop","opencga-storage/opencga-storage-mongodb","opencga-storage/opencga-storage-server","opencga-storage/opencga-storage-hadoop/opencga-storage-hadoop-core","opencga-storage/opencga-storage-hadoop/opencga-storage-hadoop-deps" ]
#    steps:
#      - name: Download result dir
#        uses: actions/download-artifact@v3
#        with:
#          name: workdir
#      - name: Deploy unit tests web recursively to remote
#        uses: garygrossgarten/github-action-scp@release
#        with:
#          local: ${{ matrix.module }}/target/site
#          remote: /var/www/html/reports/${{ inputs.report_context }}/${{ env.xb_version }}/${{ inputs.report_dir }}/unit/${{ matrix.module }}
#          host: ${{ secrets.SSH_TESTING_SERVER_HOST}}
#          port: ${{ secrets.SSH_TESTING_SERVER_PORT}}
#          username: ${{ secrets.SSH_TESTING_SERVER_USER }}
#          password: ${{ secrets.SSH_TESTING_SERVER_PASSWORD }}
#          concurrency: 2
